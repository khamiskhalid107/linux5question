builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hellow bash
touch questionnaire.sh
sh questionnaire.sh
bash questionnaire.sh
which bash
./questionnaire.sh
ls --color=auto -l
chmod +x questionnaire.sh
ls --color=auto -l
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
echo --help
man echo
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
cd ~/project
chmod +x countdown.sh
which bash
./countdown.sh
./countdown.sh arg1 arg2 arg3
./countdown.sh arg1 arg2 arg3
man if
help if
./countdown.sh arg1
./countdown.sh arg2
cd ~/project
./countdown.sh 4
./countdown.sh 5
help
help [[ expression ]]
help test
./countdown.sh 5
[[ 4 -le 5 ]]
echo $?
[[ 4 -ge 5 ]]
Type echo $?
[[ 4 -ge 5 ]]
[[ 10 -ne 5 ]]
ls --color=auto
ls --color=auto -y
help test
[[ -a countdown.sh ]]
[[ -a bad_file.txt ]]
[[ -x countdown.sh ]]
help [[ expression ]]
[[ -x countdown.sh && 5 -le 4 ]]
[[ -x countdown.sh && 5 -le 4 ]]
./countdown.sh 1
./countdown.sh 0
help
./countdown.sh 10
help
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
echo -n 2e208bff-a7c8-4b51-b861-a508eb9bf93b
cat /proc/self/environ
echo -n 2e208bff-a7c8-4b51-b861-a508eb9bf93b
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
'/vscode/vscode-server/bin/linux-x64/0ee08df0cf4527e40edc9aa28f4b5bd38bbff2b2/node' -p '"19737f6a6826" + JSON.stringify(process.env) + "19737f6a6826"'
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
ls --color=auto /
ls --color=auto /bin
man sleep
sleep 3
./countdown.sh 3
./countdown.sh 3
./countdown.sh 1
help while
./countdown.sh 5
touch bingo.sh
chmod +x bingo.sh
which bash
./bingo.sh
printenv
echo $LANG
declare -p
echo $RANDOM
./bingo.sh
I=0
echo $I
(( I++ ))
echo $I
help let
(( I += 10 ))
echo $I
$(( I + 4 ))
echo $(( I + 4 ))
echo $I
J=$(( I - 6 ))
echo $J
echo $(( J bingo.sh questionnaire.sh 5 + 25 ))
echo $J
declare -p
declare -p J
declare -p RANDOM
echo $(( RANDOM % 75 ))
echo $(( RANDOM % 75 + 1 ))
./bingo.sh
help let
./bingo.sh
touch fortune.sh
chmod +x fortune.sh
which bash
./fortune.sh
ARR=("a" "b" "c")
echo ${ARR[1]}
echo ${ARR[@]}
declare -p ARR
./fortune.sh
help
help function
./fortune.sh
